trigger:
  - master

pool:
  vmImage: ubuntu-latest

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '20.x'
    displayName: 'Install Node.js'

  - task: npmAuthenticate@0
    inputs:
      workingFile: .npmrc
    displayName: 'NPM Authenticate'

  - bash: |
      echo "registry=https://pkgs.dev.azure.com/mesamericas/_packaging/sms-core/npm/registry/" > .npmrc
      echo "always-auth=true" >> .npmrc
      
      FEED_VERSION=$(npm view vsc-mes-scaffolding version)
      
      if [ $? -eq 0 ]; then
        echo "Found version $FEED_VERSION in feed"
        IFS='.' read -r -a version_parts <<< "$FEED_VERSION"
        PATCH=$((version_parts[2] + 1))
        NEW_VERSION="${version_parts[0]}.${version_parts[1]}.$PATCH"
      else
        echo "Could not get version from feed, using package.json"
        CURRENT_VERSION=$(node -p "require('./package.json').version")
        IFS='.' read -r -a version_parts <<< "$CURRENT_VERSION"
        PATCH=$((version_parts[2] + 1))
        NEW_VERSION="${version_parts[0]}.${version_parts[1]}.$PATCH"
      fi
      
      echo "Setting version to $NEW_VERSION"
      
      if ! npm version $NEW_VERSION --no-git-tag-version; then
        echo "Failed to update version in package.json"
        exit 1
      fi
      
      echo "Successfully updated version to $NEW_VERSION"
      echo "##vso[task.setvariable variable=NEW_VERSION]$NEW_VERSION"
    displayName: 'Update Version'

  - script: |
      npm install -g vsce
      npm install
    displayName: 'Install vsce and dependencies'

  - script: |
      vsce package
    displayName: 'Package extension'

  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)'
      Contents: |
        **/*.vsix
      TargetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)'
      artifact: 'extension'
      publishLocation: 'pipeline'

  - task: Npm@1
    inputs:
      command: 'publish'
      publishRegistry: 'useFeed'
      publishFeed: 'd7bdf2f6-a624-45ce-a264-701f6ff0cc3f/5d21d636-4e4f-4ae5-babf-051c32637bc1'
      publishPackageMetadata: true