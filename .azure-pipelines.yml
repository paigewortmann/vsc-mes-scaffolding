trigger:
  - master

pool:
  vmImage: ubuntu-latest

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '20.x'
    displayName: 'Install Node.js'

  - task: Npm@1
    inputs:
      command: 'install'
      customCommand: '--legacy-peer-deps'
    displayName: 'npm install'

  - task: Npm@1
    inputs:
      command: 'custom'
      customCommand: 'install -g @vscode/vsce'
    displayName: 'Install vsce'

  - bash: |
      # Get current version from package.json
      CURRENT_VERSION=$(node -p "require('./package.json').version")
      
      # Split version into parts
      IFS='.' read -r -a version_parts <<< "$CURRENT_VERSION"
      
      # Increment patch version
      PATCH=$((version_parts[2] + 1))
      NEW_VERSION="${version_parts[0]}.${version_parts[1]}.$PATCH"
      
      # Update package.json with new version
      npm version $NEW_VERSION --no-git-tag-version
      
      echo "##vso[task.setvariable variable=NEW_VERSION]$NEW_VERSION"
    displayName: 'Bump Version'

  - bash: |
      vsce package
    displayName: 'Package Extension'

  - task: CopyFiles@2
    inputs:
      contents: '*.vsix'
      targetFolder: '$(Build.ArtifactStagingDirectory)'
    displayName: 'Copy VSIX to artifacts'

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'vsix'
    displayName: 'Publish VSIX artifact'